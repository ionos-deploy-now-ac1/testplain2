# Do not touch this file
# version: 2022-07-21

name: Deploy Now - Deployment

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
      project-id:
        required: true
        type: string
      branch-id:
        required: true
        type: string
      deployment-ids:
        require: true
        type: string

concurrency: ${{ github.ref }}

jobs:
  deploy-to-ionos:
    runs-on: ubuntu-latest
    permissions:
      actions: read
    strategy:
      matrix:
        deployment-id: ${{ fromJson(inputs.deployment-ids) }}
    steps:
      - name: Update deployment status
        uses: ionos-deploy-now/project-action@main
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api.prelive.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: update-status
          status: in_progress

      - name: Retrieve stored deployment
        uses: ionos-deploy-now/artifact-action@master
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api.prelive.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          version: ${{ inputs.version }}
          action: download

      - name: Fetch deployment info
        uses: ionos-deploy-now/project-action@main
        id: deployment
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api.prelive.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: retrieve-info

      - name: Render templates
        uses: ionos-deploy-now/template-renderer-action@feature/v2
        id: template
        with:
          data: ${{ toJson(secrets) }}
          input-directory: deployment
          output-directory: deployment
          intermediate-data-file: deployment/.template-renderer-data

      - name: Render real site-url to all files
        run: |
          for file in `grep -rl 'https://IONOS_DEPLOY_NOW_SITE_URL' .`; do
            sed -e 's|https://IONOS_DEPLOY_NOW_SITE_URL|${{ fromJson(steps.deployment.outputs.info).site-url }}|g'
          done

      - name: Render SSH user secret name
        run: echo SSH_USERNAME_SECRET=IONOS_DEPLOYMENT_`echo ${{ matrix.deployment-id }} | tr '[:lower:]' '[:upper:]' | tr '-' '_'`_SSH_USERNAME >> $GITHUB_ENV

      - name: Deploy to IONOS
        uses: ionos-deploy-now/deploy-to-ionos-action@feature/v2
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api.prelive.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          deployment-info: ${{ steps.deployment.outputs.info }}
          ssh-user: ${{ secrets[env.SSH_USERNAME_SECRET] }}
          ssh-key: ${{ secrets.IONOS_SSH_KEY }}

      - name: Update deployment status
        if: ${{ always() }}
        uses: ionos-deploy-now/project-action@main
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api.prelive.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: update-status
          status: ${{ job.status }}

  notify-deployment-finished:
    needs: deploy-to-ionos
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Notify all deployments finished
        uses: ionos-deploy-now/project-action@main
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api.prelive.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          action: set-deployments-finished
